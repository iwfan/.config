# References:
#   https://github.com/gpakosz/.tmux
#   https://github.com/arcticicestudio/igloo/blob/master/snowblocks/tmux/tmux.conf

#+-----------+
#+ Bootstrap +
#+-----------+

# If "tpm" is not already installed, automatically clone the repository and install all configured plugins.
if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

#+---------+
#+ Options +
#+---------+

# -- general -------------------------------------------------------------------

# Enable 256 color support
set -g default-terminal "screen-256color"

# Enable 24-bit "True color" support
set -ga terminal-overrides ",*256col*:Tc"

# Change Cursor Shape in Neovim
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[ q'

unbind C-b
set-option -g prefix C-w
set -g prefix2 C-w                        # GNU-Screen compatible prefix
bind-key C-w send-prefix

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

# Use vi(m) key bindings in copy mode and in the status line
setw -g mode-keys vi
set -g status-keys vi

setw -g xterm-keys on
set -s focus-events on

# Increase the maximum history length
set -g history-limit 10000

# Enable mouse mode
set -g mouse on

# Use multiple commands without sending the prefix-key within 1 second (default is 500 ms).
set -g repeat-time 600

# No delay for escape key press
set -sg escape-time 10

# <Prefix>-r to reload the configuration file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded configuration!"

# <Prefix>-<e> to toggle synchronization
bind e setw synchronize-panes


# -- display -------------------------------------------------------------------

set -g base-index 1                       # start windows numbering at 1
setw -g pane-base-index 1                 # make pane numbering consistent with windows

set -g set-titles on                      # set terminal title
set -g set-titles-string "#h:#S:#{pane_title} #{session_alerts}"

setw -g automatic-rename on               # rename window to reflect current program
set -g automatic-rename-format " #I:#{=30:pane_title}#F "
set -g renumber-windows on                # renumber windows when a window is closed

set -g display-panes-time 800             # slightly longer pane indicators display time
set -g display-time 1000                  # slightly longer status messages display time

set -g status-interval 10                 # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off


# -- Status Line -------------------------------------------------------------------

# the entire status line background color
# bg0=default
bg0=#3e4452
# primary block
bg1=#98c379
fg1=#292c33
# secondrary block
bg2=#5c6370
fg2=#abb2bf

# Some colours to match my vim statusline
# Mostly light grey and darker white
defaultText='#2B2B2B'
lightbg1='#A9B7C6' # Lighter
lightbg2='#818E9C' # Darker but still light
lightbluebg='#BEEFF0' # A faint blue
basebg='#2c323c'
basefg='#A9B7C6'
whitey='#ffffff'

status_left_sep=""  # ""
window_left_sep=""
window_right_sep=""
status_right_sep=""

set -g status "on"
set -g status-justify centre
set -g status-position bottom
set -g status-style "none,bg=$bg0"
set -g status-left-style "none"
set -g status-right-style "none"
set -g status-right-length "100"
set -g status-left-length "100"
set -g pane-border-style "fg=$bg2"
set -g pane-active-border-style "fg=$bg1"
setw -g window-status-activity-style "none,fg=$bg1,bg=$bg0"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=$fg2,bg=$bg0"
set -g message-style "fg=$fg1,bg=$bg1"
set -g message-command-style "fg=$fg1,bg=$bg1"

set -g status-left "\
#[fg=$fg1,bg=$bg1]  #W \
#[fg=$bg1,bg=$bg2,nobold,nounderscore,noitalics]#{status_left_sep}\
#[fg=$fg2,bg=$bg2]  #{continuum_status} \
#[fg=$bg2,bg=$bg0,nobold,nounderscore,noitalics]#{status_left_sep}\
#{prefix_highlight}"

set -g status-right "\
#[fg=$bg2,bg=$bg0,nobold,nounderscore,noitalics]#{status_right_sep}\
#[fg=$fg2,bg=$bg2]  %R %a \
#[fg=$bg1,bg=$bg2,nobold,nounderscore,noitalics]#{status_right_sep}\
#[fg=$fg1,bg=$bg1]  %Y-%m-%d "

setw -g window-status-format "\
#[fg=$bg2,bg=$bg0,nobold,nounderscore,noitalics]#{window_left_sep}\
#[fg=$fg2,bg=$bg2] #I #W \
#[fg=$bg2,bg=$bg0,nobold,nounderscore,noitalics]#{window_right_sep}"

setw -g window-status-current-format "\
#[fg=$bg1,bg=$bg0,nobold,nounderscore,noitalics]#{window_left_sep}\
#[fg=$fg1,bg=$bg1] #I #W \
#[fg=$bg1,bg=$bg0,nobold,nounderscore,noitalics]#{window_right_sep}"


# # Status base colours
# set -g status-style bg=$basebg,fg=$basefg
# set -g status-left-style bg=$basebg,fg=$basefg
# set -g status-left-length 75
# set -g status-left "#[fg=$defaultText,bg=$lightbg1] #S #[fg=$lightbg1,bg=$basebg]  "
#
# # Right status bar prompt
# set -g status-right-style bg=$defaultText,fg=$basefg
# set -g status-right-length 150
# set -g status-right "#[fg=$lightbg2,bg=$basebg]#[fg=$defaultText,bg=$lightbg2] #H #[fg=$lightbg1,bg=$lightbg2]#[fg=$defaultText,bg=$lightbg1] #(date '+%I:%M - %a, %b %d') "
#
# # Current window status in status bar
# set -g window-status-current-style bg=$basebg,fg=$whitey
# set -g window-status-activity-style bg=$basebg,fg=$basefg
# set -g window-status-separator " "
# set -g pane-border-style bg=$basefg,fg=$basebg
# set -g pane-active-border-style bg=$basefg,fg=$basefg
# set -g clock-mode-colour $basefg
# set -g clock-mode-style 12
# set -g message-style bg=$basefg,fg=$basebg
# set -g message-command-style bg=$basebg,fg=$basefg
# set -g mode-style bg=$basebg,fg=$basefg
#
# -- navigation ----------------------------------------------------------------

# Inherit current working directory for new windows/pane
bind C-c new-window -c "#{pane_current_path}"

# split current window horizontally
unbind '"'
bind - split-window -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录

# split current window vertically
unbind %
bind | split-window -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

# pane navigation
bind -r h select-pane -L                  # move left
bind -r j select-pane -D                  # move down
bind -r k select-pane -U                  # move up
bind -r l select-pane -R                  # move right
bind > swap-pane -D                       # swap current pane with the next one
bind < swap-pane -U                       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# window navigation
unbind n
unbind p
bind -r C-h previous-window               # select previous window
bind -r C-l next-window                   # select next window

# -- list choice (tmux < 2.4) --------------------------------------------------

# vi-choice is gone in tmux >= 2.4
run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'


# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode
bind v copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# -- buffers -------------------------------------------------------------------

bind b list-buffers                       # list paste buffers
bind p paste-buffer                       # paste from the top paste buffer
bind P choose-buffer                      # choose which buffer to paste from

#+---------+
#+ Plugins +
#+---------+

# prefix I   install
# prefix alt-u   uninstall
# prefix U   upgrade

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'sainnhe/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin "tmux-plugins/tmux-prefix-highlight"
set -g @plugin 'sainnhe/tmux-fzf'

#+-----------------------+
#+ Plugin Configurations +
#+-----------------------+

# {{{tmux-resurrect
set -g @resurrect-save 'c-S'
set -g @resurrect-restore 'c-R'
set -g @resurrect-capture-pane-contents 'on'
# save vim session
set -g @resurrect-strategy-vim 'session'
# save neovim session
set -g @resurrect-strategy-nvim 'session'
# }}}

# {{{tmux-continuum
set -g @continuum-save-interval '60' # 一小时备份一次
set -g @continuum-restore 'on'
set -g @resurrect-hook-post-restore-all 'tmux kill-session -t 0'
#}}}

# {{{tmux-prefix-highlight
set -g @prefix_highlight_show_copy_mode 'on'
# set -g @prefix_highlight_output_prefix "#[fg=$bg2]#[bg=$bg0]#[nobold]#[nounderscore]#[noitalics]#{left_sep}#[fg=$fg2]#[bg=$bg2]"
set -g @prefix_highlight_output_prefix "#[fg=$bg1]#[bg=$bg0]"
# set -g @prefix_highlight_output_suffix "#[fg=$bg2]#[bg=$bg0]#[nobold]#[nounderscore]#[noitalics]#{right_sep}"
set -g @prefix_highlight_prefix_prompt '  '
set -g @prefix_highlight_copy_prompt '  '
# }}}

# {{{tmux-fzf
TMUX_FZF_OPTIONS="-d 35%"
set -g @tmux-fzf-launch-key 'C-f'
TMUX_FZF_MENU=\
"attach session\n~/.tmux/plugins/tmux-fzf/scripts/session.sh attach\n"\
"rename window\n~/.tmux/plugins/tmux-fzf/scripts/window.sh rename\n"
# }}}

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
