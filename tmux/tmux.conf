# References:
#   https://github.com/gpakosz/.tmux
#   https://github.com/arcticicestudio/igloo/blob/master/snowblocks/tmux/tmux.conf

#+-----------+
#+ Bootstrap +
#+-----------+

# If "tpm" is not already installed, automatically clone the repository and install all configured plugins.
if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

#+---------+
#+ Plugins +
#+---------+

set -g @plugin "arcticicestudio/nord-tmux"
set -g @plugin "tmux-plugins/tmux-prefix-highlight"

#+-----------------------+
#+ Plugin Configurations +
#+-----------------------+

#+--- tmux-plugins/tmux-prefix-highlight ---+
set -g @prefix_highlight_show_copy_mode "on"
set -g @prefix_highlight_show_sync_mode 'on'

#+---------+
#+ Options +
#+---------+

# -- general -------------------------------------------------------------------

# Enable 256 color support
set -g default-terminal "screen-256color"

# Enable 24-bit "True color" support
set -ga terminal-overrides ",*256col*:Tc"

set -g prefix2 C-w                        # GNU-Screen compatible prefix
bind C-w send-prefix -2

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

# Use vi(m) key bindings in copy mode and in the status line
setw -g mode-keys vi
set -g status-keys vi

setw -g xterm-keys on
set -s focus-events on

# Increase the maximum history length
set -g history-limit 10000

# Enable mouse mode
set -g mouse on

# Use multiple commands without sending the prefix-key within 1 second (default is 500 ms).
set -g repeat-time 600

# No delay for escape key press
set -sg escape-time 10

# <Prefix>-r to reload the configuration file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded configuration!"

# <Prefix>-<e> to toggle synchronization
bind e setw synchronize-panes


# -- display -------------------------------------------------------------------

set -g base-index 1                       # start windows numbering at 1
setw -g pane-base-index 1                 # make pane numbering consistent with windows

setw -g automatic-rename on               # rename window to reflect current program
set -g renumber-windows on                # renumber windows when a window is closed

set -g set-titles on                      # set terminal title

set -g display-panes-time 800             # slightly longer pane indicators display time
set -g display-time 1000                  # slightly longer status messages display time

set -g status-interval 10                 # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off


# -- navigation ----------------------------------------------------------------

# Inherit current working directory for new windows/pane
bind c new-window -c "#{pane_current_path}"

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
unbind '"'
bind - split-window -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录

# split current window vertically
unbind %
bind | split-window -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

# pane navigation
bind -r h select-pane -L                  # move left
bind -r j select-pane -D                  # move down
bind -r k select-pane -U                  # move up
bind -r l select-pane -R                  # move right
bind > swap-pane -D                       # swap current pane with the next one
bind < swap-pane -U                       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# window navigation
unbind n
unbind p
bind -r C-h previous-window               # select previous window
bind -r C-l next-window                   # select next window
bind Tab last-window                      # move to last active window

# -- list choice (tmux < 2.4) --------------------------------------------------

# vi-choice is gone in tmux >= 2.4
run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'


# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers -------------------------------------------------------------------

bind b list-buffers                       # list paste buffers
bind p paste-buffer                       # paste from the top paste buffer
bind P choose-buffer                      # choose which buffer to paste from

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
